name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    defaults:
        run:
            shell: ${{ matrix.shell }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        include:
          - os: windows-latest
            arch: 'win64_mingw'
            host: 'windows'
            shell: 'msys2 {0}'
          - os: ubuntu-latest
            arch: 'gcc_64'
            host: 'linux'
            shell: 'bash'
            binary_ending: ''

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'true'

    - name: Install MSYS2
      if: matrix.os == 'windows-latest'
      uses: msys2/setup-msys2@v2
      with:
        install: mingw-w64-x86_64-toolchain mingw-w64-x86_64-cmake git
        msystem: mingw64
        release: false
        
    - name: Install Linux Dependencies
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get install -y build-essential libgl1-mesa-dev libxcb-cursor-dev
    
    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: '6.6.0'
        host: ${{ matrix.host }}
        target: 'desktop'
        arch: ${{ matrix.arch }}
        dir: '${{github.workspace}}/qt'
        install-deps: 'true'
        modules: 'qtcharts qtpositioning'
    
    - name: Configure
      env:
        CMAKE_PREFIX_PATH: ${{env.Qt6_Dir}}/lib/cmake
      run: cmake -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DALP_ENABLE_POSITIONING=false -B '${{github.workspace}}'/build

    - name: Build
      run: cmake --build '${{github.workspace}}'/build

    - name: Test on Linux
      if: matrix.os == 'ubuntu-latest'
      env:
        QT_DEBUG_PLUGINS: 1
      run: |
        '${{github.workspace}}'/build/alp_external/radix/unittests/unittests_radix
        '${{github.workspace}}'/build/unittests/nucleus/unittests_nucleus
        #'${{github.workspace}}'/build/unittests/gl_engine/unittests_gl_engine # unsupported for now

    - name: Test on Windows
      if: matrix.os == 'windows-latest'
      env:
        QT_DEBUG_PLUGINS: 1
      run: |
        ls '${{github.workspace}}'/build/unittests/
        echo "==="
        ls '${{github.workspace}}'/build/unittests/nucleus
        '${{github.workspace}}'/build/alp_external/radix/unittests/unittests_radix.exe
        '${{github.workspace}}'/build/unittests/unittests_nucleus.exe
        '${{github.workspace}}'/build/unittests/unittests_gl_engine.exe
